getwd()
dir.create("inst/rmarkdown/templates/report/skeleton",
recursive = TRUE)
library(Statetemplate)
devtools::uninstall("Statatemplate"")
devtools::uninstall("Statatemplate")
detach("package:Statetemplate", unload = TRUE)
devtools::uninstall("Statatemplate")
library(Statetemplate)
detach("package:Statetemplate", unload = TRUE)
devtools::uninstall("package:Statatemplate")
library(Statetemplate)
detach("package:Statetemplate", unload = TRUE)
pwd()
getwd()
devtools::install("Statetemplate")
setwd("d:/rstudio/package")
devtools::install("Statetemplate")
devtools::uninstall("Statetemplate")
library(Statetemplate)
usethis::use_package("Statamarkdown")
library(Statetemplate)
?rmarkdown::html_document
library(SmdAid)
help system.file
?system.file
library(SmdAid)
getwd()
setwd("..")
usethis::use_vignette("SmdAid")
setwd("SimAid")
setwd("./SimAid")
getwd()
setwd("./SmdAid")
usethis::use_vignette("SmdAid")
library(SmdAid)
getOption("encoding")
?seq.int
library(SmdAid)
xx<-function(...){
args<-list(...)
message(args)
}
mypass<-function  (){
xx(extra="dfdf")
}
xx(arg="3")
xx<-function(...){
args<-list(...)
print(args)
}
xx(arg="3")
mypass<-function  (){
xx(...)
}
xx<-function(arg=4){
print(...)
}
mypass<-function  (...,arg4){
args<-list(...)
xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
do.call(xx,args)
#xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
nl<-names(args)
print(nl %in% list("extra"))
do.call(xx,args)
#xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
nl<-names(args)
print(nl)
print(nl %in% list("extra"))
do.call(xx,args)
#xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
nl<-names(args)
print(nl)
print(nl %in% list("extra"))
do.call(xx,args)
#xx(args)
}
mypass(arg="3",age2="55")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
nl<-names(args)
print(nl)
print(nl %in% list("extra","arg"))
do.call(xx,args)
#xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(arg)
}
mypass<-function  (...,arg4){
args<-list(...)
nl<-names(args)
m<-nl %in% list("extra","arg")
do.call(xx,args)
#xx(args)
}
mypass(arg="3")
xx<-function(arg=4){
print(paste0("==> ",arg) )
}
mypass<-function  (...,arg4){
args<-list(...)
nl<-names(args)
m<-nl %in% list("extra","arg")
m
do.call(xx,args)
#xx(args)
}
mypass(arg="3")
source('~/.active-rstudio-document')
debugSource('D:/RStudio/PACKAGE/SmdAid/R/tttt.R')
m
"x" %in% list("x","y")
"x" %in% list("x","y") == T
"x1" %in% list("x","y") == T
library(SmdAid)
x<-list()
x$a<-"a"
x$b<-"b"
lapply(x,write,"c:/temp/xxx2.txt",append=T)
x
?write.table
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = myfile, sep = "", row.names = T,
col.names = FALSE, quote = FALSE, append = T)
}
x<-list()
x$a<-"a"
x$b<-"b"
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = "", row.names = T,
col.names = FALSE, quote = FALSE, append = T)
}
x<-list()
x$a<-"a"
x$b<-"b"
mylog(x)
mylog<-function(...){
args<-list(unlist(...))
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = "", row.names = T,
col.names = FALSE, quote = FALSE, append = T)
}
x<-list()
x$a<-"a"
x$b<-"b"
mylog(x)
mylog<-function(...){
args<-list(unlist(...))
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = "", row.names = F,
col.names = T, quote = FALSE, append = T)
}
x<-list()
x$a<-"axx "
x$b<-"xxb "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = F, quote = FALSE, append = T)
}
x<-list()
x$a<-"axx "
x$b<-"xxb "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = FALSE, append = T)
}
x<-list()
x$a<-"axx "
x$b<-"xxb "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = FALSE, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = "\\t", row.names = F,
col.names = T, quote = FALSE, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = "\\t", row.names = F,
col.names = T, quote = FALSE, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog(x)
mylog<-function(...){
args<-unlist(list(...))
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog(x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog("xxx")
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog("xxx")
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = T,
col.names = F, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog("xxx")
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = T,
col.names = F, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog("xxx",x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog("xxx",x)
mylog<-function(...){
args<-list(...)
filename <-"c:/temp/xxx2.txt"
write.table(args, file = filename, sep = ",", row.names = F,
col.names = T, quote = T, append = T)
}
x<-list()
x$a<-"xxx "
x$b<-"ttt "
mylog("xxx",x)
library(SmdAid)
?myknit
library(SmdAid)
Sys.Date()
rmarkdown::yaml_front_matter("RmdNote.Rmd")
getwd()
rmarkdown::yaml_front_matter("test/RmdNote.Rmd")
rmarkdown::yaml_front_matter("MyNote/RmdNote.Rmd")
rmarkdown::yaml_front_matter("test/test3.Rmd")
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::yaml_front_matter("../test/test3.Rmd")
rmarkdown::default_output_format("../test/test3.Rmd")
kmitr:knit
kmitr::knit
knitr::nkit
knitr::knit
?knitr::knit ()
options(help_type = "html")
?knitr::knit ()
library(SmdAid)
getwd()
rmarkdown::render("Test/Test3.rmd")
library(SmdAid)
rmarkdown::render("Test/Test3.rmd")
options$listSrc
options
str(options)
options
before
rmarkdown::render("Test/Test3.rmd")
file.exists("./Test/report/out_v1_1.html")
library(SmdAid)
file.exists("./Test/report/out_v1_1.html")
rmarkdown::render("Test/Test3.rmd")
library(SmdAid)
rmarkdown::render("Test/Test3.rmd")
library(SmdAid)
rmarkdown::render("Test/Test3.rmd")
library(SmdAid)
rmarkdown::render("Test/Test3.rmd")
library(SmdAid)
rmarkdown::render("Test/Test3.rmd")
library(SmdAid)
str<-"## hello"
grepl("^#.* ",str)
str<-"## hello"
grepl("(^#.*)(.*$) ","\1 <font color='red'> \2 </font>",str)
str<-"## hello"
sub("(^#.*)(.*$) ","\1 <font color='red'> \2 </font>",str)
str<-"## hello"
sub("(^[#]*)(.*$) ","\1 <font color='red'> \2 </font>",str)
str<-"## hello"
regexpr("(^[#]*)(.*$) ",str)
sub("(^[#]*)(.*$) ","\1 <font color='red'> \2 </font>",str)
str<-"## hello"
if(grepl("^[#]* ",str)) {
regexpr("(^[#]* )(.*$) ",str)
sub("(^[#]*)(.*$) ","\1 <font color='red'> \2 </font>",str)
}
str<-"## hello"
if(grepl("^[#]* ",str)) {
#regexpr("(^[#]* )(.*$) ",str)
x<-sub("(^[#]*)(.*$) ","\1 <font color='red'> \2 </font>",str)
print(x)
}
str<-"## hello"
if(grepl("^[#]* ",str)) {
#regexpr("(^[#]* )(.*$) ",str)
x<-sub("(^[#]* )(.*$) ","\1 <font color='red'> \2 </font>",str)
print(x)
}
str<-"## hello"
if(grepl("^[#]* ",str)) {
#regexpr("(^[#]* )(.*$) ",str)
x<-sub("(^[#]* )(.*$) ","\\1 <font color='red'> \\2 </font>",str)
print(x)
}
str<-"## hello"
if(grepl("^[#]* ",str)) {
#regexpr("(^[#]* )(.*$) ",str)
x<-sub("(^[#]* )(.*$) ","\\1 <font color='red'> \\2 </font>",str, perl=TRUE)
print(x)
}
str<-"## hello"
if(grepl("^[#]* ",str)) {
#regexpr("(^[#]* )(.*$) ",str)
x<-sub("(^[#]* )(.*$)","\\1 <font color='red'> \\2 </font>",str, perl=TRUE)
print(x)
}
str<-"#### hello"
if(grepl("^[#]* ",str)) {
#regexpr("(^[#]* )(.*$) ",str)
x<-sub("(^[#]* )(.*$)","\\1 <font color='red'> \\2 </font>",str, perl=TRUE)
print(x)
}
library(SmdAid)
paste0("dfd","dfdf")
library(SmdAid)
stata_pre<<-"out_v1"
emo::ji("check")
library(SmdAid)
paste(c(1,2))
x<-paste(c(1,2))
typeof(x)
x
length(x)
x<-paste0(c(1,2))
length(x)
x
x[1]
?readLines()
pwd()
cd()
wd()
cwd()
wd()
pd()
getwd()
x<-readLines(".gitignore")
length(x)
library(SmdAid)
